mql5
//+------------------------------------------------------------------+
//|                                              Fundamental Breakout |
//|                                        Expert Advisor for MQL5   |
//|                                                      forexroboteasy.com   |
//|                                               Developed by Forex Robot Easy Team |
//+------------------------------------------------------------------+

// Global variables
input double StopLoss = 50; // Stop Loss value in pips
input double TakeProfit = 100; // Take Profit value in pips
input double TrailingStop = 30; // Trailing Stop value in pips
input int MagicNumber = 12345; // Unique Magic Number for trades

//+------------------------------------------------------------------+
//| Custom Indicator Constants                                       |
//+------------------------------------------------------------------+
#define RANGE_HIGH 0 // Index of the Range High value in the indicator buffer
#define RANGE_LOW 1 // Index of the Range Low value in the indicator buffer

//+------------------------------------------------------------------+
//| Expert Advisor input parameters                                  |
//+------------------------------------------------------------------+
input string SymbolName = 'EURUSD'; // Symbol name
input int Timeframe = PERIOD_H1; // Timeframe

//+------------------------------------------------------------------+
//| Expert Advisor initialization function                           |
//+------------------------------------------------------------------+
int OnInit()
{
   // Set the required time settings
   SetOptimization();
   
   // Subscribe to the required symbol and timeframe
   if(!SymbolSelect(SymbolName, true))
   {
      Print('Failed to select symbol: ', SymbolName);
      return INIT_FAILED;
   }
   
   if(!ChartSetSymbolPeriod(0, SymbolName, Timeframe))
   {
      Print('Failed to set symbol period: ', SymbolName, ' ', Timeframe);
      return INIT_FAILED;
   }
   
   return INIT_SUCCEEDED;
}

//+------------------------------------------------------------------+
//| Expert Advisor start function                                     |
//+------------------------------------------------------------------+
void OnTick()
{
   // Check if it's time to place orders
   if(IsTimeToTrade())
   {
      // Calculate the Range High and Range Low
      double rangeHigh = iCustom(Symbol(), Timeframe, 'CustomIndicator', 0, RANGE_HIGH);
      double rangeLow = iCustom(Symbol(), Timeframe, 'CustomIndicator', 0, RANGE_LOW);
      
      // Place Buy Stop Order
      if(Bid > rangeHigh)
      {
         double stopLoss = rangeLow - StopLoss * Point;
         double takeProfit = rangeHigh + TakeProfit * Point;
         
         int ticket = OrderSend(Symbol(), OP_BUYSTOP, 0.01, Ask, 3, stopLoss, takeProfit, 'Buy Stop Order', MagicNumber, 0, Green);
         
         if(ticket > 0)
         {
            // Set trailing stop
            if(TrailingStop > 0)
            {
               if(!OrderSelect(ticket, SELECT_BY_TICKET))
               {
                  Print('Failed to select order: ', ticket);
               }
               else
               {
                  OrderSelect(ticket, SELECT_BY_TICKET, MODE_TRADES);
                  OrderModify(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), OrderTakeProfit(), 0, Green);
               }
            }
         }
         else
         {
            Print('Failed to send Buy Stop Order');
         }
      }
      
      // Place Sell Stop Order
      if(Ask < rangeLow)
      {
         double stopLoss = rangeHigh + StopLoss * Point;
         double takeProfit = rangeLow - TakeProfit * Point;
         
         int ticket = OrderSend(Symbol(), OP_SELLSTOP, 0.01, Bid, 3, stopLoss, takeProfit, 'Sell Stop Order', MagicNumber, 0, Red);
         
         if(ticket > 0)
         {
            // Set trailing stop
            if(TrailingStop > 0)
            {
               if(!OrderSelect(ticket, SELECT_BY_TICKET))
               {
                  Print('Failed to select order: ', ticket);
               }
               else
               {
                  OrderSelect(ticket, SELECT_BY_TICKET, MODE_TRADES);
                  OrderModify(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), OrderTakeProfit(), 0, Red);
               }
            }
         }
         else
         {
            Print('Failed to send Sell Stop Order');
         }
      }
   }
}

//+------------------------------------------------------------------+
//| Helper function to determine if it's time to trade                |
//+------------------------------------------------------------------+
bool IsTimeToTrade()
{
   // Implement your logic here to determine if it's time to trade
   return true; // Placeholder logic for demonstration purposes
}

//+------------------------------------------------------------------+
//| Helper function to set the required time settings                 |
//+------------------------------------------------------------------+
void SetOptimization()
{
   // Implement your logic here to determine the required time settings
}
